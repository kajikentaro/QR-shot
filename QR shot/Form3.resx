<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        buIwnlnviQAAAABJRU5ErkJggg==
</value>
  </data>
</root>