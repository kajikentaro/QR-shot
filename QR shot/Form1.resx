<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACEBwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAAAFv
        ck5UAc+id5oAAAc+SURBVHja7d1rnaQ6EMbhloAEJCABCUhAAhJwgAQkIAEJSEACErLMzO5OX6Z7uFTS
        lcq/3i/nzNn9nSF5ICTcLu7yL7NrXPH9r8RkirWXZ/f9g///0NA4CaVxNwAW9vwEjwSL+wuA7k+ZAAf/
        xAeC9dSPhkg3M/t/6seAC+N/2ucBFxoh8dAEACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
        IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA8JpSOACIqOsH56MG
        mwysbVDtfFYNgJS73yQBSxtTuRBVAUBnPr+BE6CMfWPJyobkgbr/i0AOAF3J3ORC1rT+HwGgKGG7/4sA
        ANSkd++oHgA60rl3VQeAFGb+xlcFmPknvirAzD/xVQFm/omvCjDzT3xVgO5PnAAz/8RXBej+xAkw8098
        VSC+qd+oOAUACAAIAAgACAAIAIhtACV5e94CoHCdmx2lo+a1N4pwAEo30uYKazx2NIjnDjzKy12KMV+E
        pQQuTNP9iRPY/kcH2jaSGnwAaGjXiKqRBpApuQHT0oFafkWgv7pRNZMF0NJj4pM2+VW9615qZQGw/8cG
        YJEEUNFf0QHY/MxSvDdhAuA1gF4OAPP/GAFMcgC2TTyOnblOAPAEwIUFcPSy5AiAz1vdj92FXAPABoCj
        0+wWAAAAAAAAAAAAAEATgG7z83MAMAlgFPmTqQLoN13xA4BZAO3mxR6GAABwEggAAAAAAAAAAAAAAAAA
        AOA9ALghJHEAFAAoAFAAoACgv+aHKxSzIgDziyspMwDONHrrqhff98jX/9oGmpiaux9A9/7e7VynKL2/
        BAsAgao/8SK10uNDcQDwXsvaINnhzv9+M0Lr5dloAHiuVvArPpmH9yMAwGMNOz7k9nVuPayN17wcLHLh
        dyQBwNuBv9q1d9/XtDZj8fQ9CYsnAPnBKyk5AO6bde+B//m8If9xMBi9ADDwdLCOcX9/o70eSkpv70sC
        gPihvz7UaL931OOAUAsMBQAQ7v6jb8veUt3DwHL+s9UAUNH9W7dtfhgMzhIAgIru37NtrSgBAIhVcarR
        9q0vZHcEzrCV/2zlnCKA+uRes6/u38Rdq26bBAB0pw+b7iSBHgDvq0lg3HSnCUwAiPHk78y2TWJnAgAI
        vO4ntW19FO9SNw1gEpo6yZx8zgAIXeWbAdwOQCUAwpbcMorU7zACIMb9/9y2NcqPAWYBSC6jnpuHZKqP
        AWYBVEoA3M5EKgCEqVn0AooTPAbMAIhj+Vdy29qbl+MBIEDlqgDMN7d2AiCyAUBi2yq1g4BJAJ06AL3a
        QcAkgEodgEXtTMAkgEwdgOt7kjIA+K1JuPtltq1VeneAQQCDSgDXv9UAAJ/VqgQwK703wCCAWiUAp/Q2
        UYMASqUASpVXBcUAWI5WmMECAI2rEwCIDEALgNAp10bXE4aA4GlDnihZTqy/eA2A1IcAAAQDoHEdQCsA
        k+sAGi8GZ0oBVAAIdS1gUQmAawFeqxe/D18aQA+AUPcDtCoBcD9AsI0qVQJwAAh3PXBRB6AEQMjTwEEd
        gBYAIc8CanUAJgD4r1x0EJDsfp4MClKN6IMYkgAaAIQeBHJVACYAhJ8J9GoA6HtHiFkA/c0xYFECoAfA
        e04EWxUAcoWtZBjA9TEgO/VQtt393/h7AqXe0ifT/TpfF2sawCi0AicDYARA+KpFukDT/YkA2FW3b+jK
        Ds7Cz3d/5uXbwgDYUMPdOLy8BcCgtn3MA7hdFj5GwNryb2IA7h/L3E/A2upfcgDuvxuS7zwXODf5WwDw
        /prvXhyV7RqVz5z8zcpbJhEAj59x+hiZF88AMsUfi0oOwAeB/GFtfvQIII+g+5P7enjxw1M6sxcA2sf+
        JAE8+4B8/QuCI+t+SyQtkhiAj+qePK83iAHoImqNBAF8nA0UT07a6pXBcgpAEcXInziAj2pfvFG4WCF0
        n9/a3gcgU/t5SAD8uDYg+0rJWv2cHwDeEMTZ+aIAJueiRdCe+MRMvv7tOdptn+QA9C7uGta9ONu5zlcr
        vsy7rXo5AJWzUNN68lf9cjzI1z/RRXzEu65KDsAlmqWPrRTGdf+4ftFjv/5kMrWNi+xr4lpHxTYVFgWQ
        GTsGWK9l+zmPhVufqPtqfLwpdKBdo5n1eHlVbGbsNMlqTfumvNbugqH79614XCxfDk2vDnxY98it0CMt
        rbDGY5+tOHpDdMdwoOiw3z25C8L79wJK8vYk+sEIkvgXQwgACAAIAAgACAAIAAgACAAIAAgACAAIAAgA
        CAAIAAgACAAIAAgACAAIAAgACAAIAABAEwCAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgJhLQRMk
        nLX3G5oh4ay9P9MMCeez9zkGpLv/f54DLo7zgDTH//+TAAik2P2Lu5kFMhCkdvB/WAaY1x9zJLC/5zfr
        qd/3D/4AquFyelkfYFsAAAAASUVORK5CYII=
</value>
  </data>
</root>